Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.

class Solution {
    public boolean isValidSudoku(char[][] board) {
        if(board==null || board.length!=9 || board[0].length!=9) return false;
        for(int row = 0; row<9; row++){
            boolean[] taken = new boolean[9];
            for(int i = 0; i<9; i++){
                char c = board[row][i];
                if(c!='.'){
                    int num = c-'1';
                    if(taken[num] == true) return false;
                    else taken[num]= true;
                }
            }
        }
        for(int col = 0; col<9; col++){
            boolean[] taken = new boolean[9];
            for(int i = 0; i<9; i++){
                char c = board[i][col];
                if(c!='.'){
                    int num = c-'1';
                    if(taken[num] == true) return false;
                    else taken[num]= true;
                }
            }
        }
        for(int box = 0; box<9; box++){
            boolean[] taken = new boolean[9];
            for(int row = 0; row<3; row++){
                for(int col = 0; col <3; col++){
                    char c = board[row+3*(box/3)][col+3*(box%3)];
                    if(c!='.'){
                        int num = c-'1';
                        if(taken[num] == true) return false;
                        else taken[num]= true;
                    }
                }
            }
        }
        return true;
    }
}
