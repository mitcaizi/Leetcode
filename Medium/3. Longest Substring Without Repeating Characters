Example 1:
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Example 2:
Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Example 3:
Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

Example 4:
Input: s = ""
Output: 0

class Solution {
    public int lengthOfLongestSubstring(String s) {
        Map<Character, Integer> map = new HashMap<>();
        int left =0;
        int right = 0;
        int res= 0;
        int counter = 0;
        while(right < s.length()){
            char c = s.charAt(right);
            map.put(c, map.getOrDefault(c, 0) +1);
            if(map.get(c) > 1) counter++;
            right++;
            while(counter > 0){
                char temp = s.charAt(left);
                if(map.get(temp) >1) counter--;
                map.put(temp, map.get(temp)-1);
                left++;
            }
            res = Math.max(res, right-left);    
        }
        return res; 
    }
}
